<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.syys.web.dao.mapper.OrderMapper" >

  <resultMap id="BaseResultMap" type="com.syys.web.dao.entity.Order" >
    <id column="id" property="id" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <!--
      association: 一对一关系映射
      property: 关联信息查询结果将要映射的扩展类中的对象属性名称
      id标签: 建议在关联查询时必须写上(不写不会报错，但是会影响性能)
    -->
    <association property="user" javaType="com.syys.web.dao.entity.User">
      <id column="user_id" property="id"/>
      <result column="userName" property="username" jdbcType="VARCHAR" />
      <result column="passWord" property="password" jdbcType="VARCHAR" />
      <result column="user_sex" property="userSex" jdbcType="VARCHAR" typeHandler="com.syys.web.dao.EnumHandler.UserSexTypeHandler" />
      <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    </association>
  </resultMap>

  <!--
    extends: 可以继承一个已有的resultMap,指定resultMap的唯一id
    注意: 继承时，只能继承 type 类型是一样的resultMap
  -->
  <resultMap id="orderAndUserAndOrderDetail" type="com.syys.web.dao.entity.Order" extends="BaseResultMap">
    <!--订单明细信息(一对多)-->
    <!--collection: 映射一对多关系-->
    <collection property="orderDetails" ofType="com.syys.web.dao.entity.OrderDetail">
      <id column="detailId" property="id"/>
      <result column="orderId" property="orderId" />
      <result column="itemsId" property="itemsId" />
      <result column="itemsNum" property="itemsNum" />
    </collection>
  </resultMap>

  <select id="findOrderAndUser" parameterType="int" resultMap="BaseResultMap">
    SELECT o.id,o.name,u.id user_id,u.nick_Name,u.username,u.`password`,u.user_Sex
     FROM t_user u,t_order o where u.id = o.user_id and o.id = #{id}
  </select>

  <select id="findOrderAndUserAndOrderDetail" parameterType="int" resultMap="orderAndUserAndOrderDetail">
    SELECT
        o.id,
        o. NAME,
        u.id user_id,
        u.nick_Name,
        u.username,
        u.`password`,
        u.user_Sex,
        od.id detailId,
        od.items_id itemsId,
        od.order_id orderId,
        od.items_num itemsNum
    FROM
        t_user u,
        t_order o,
        t_order_detail od
    WHERE
        u.id = o.user_id
    AND o.id = od.order_id
    AND o.id = #{id}
  </select>

</mapper>